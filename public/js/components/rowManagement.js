/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/components/rowManagement.js":
/*!**************************************************!*\
  !*** ./resources/js/components/rowManagement.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addRow: () => (/* binding */ addRow),\n/* harmony export */   calculateTotal: () => (/* binding */ calculateTotal),\n/* harmony export */   convertNumberToWords: () => (/* binding */ convertNumberToWords),\n/* harmony export */   deleteRow: () => (/* binding */ deleteRow),\n/* harmony export */   generateTaxBreakdown: () => (/* binding */ generateTaxBreakdown),\n/* harmony export */   numberToIndianRupees: () => (/* binding */ numberToIndianRupees),\n/* harmony export */   totalAmountBeforeDiscount: () => (/* binding */ totalAmountBeforeDiscount),\n/* harmony export */   totalQuantity: () => (/* binding */ totalQuantity),\n/* harmony export */   updateTotals: () => (/* binding */ updateTotals)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n// rowManagement.js â€“ Contains logic for adding/deleting rows.\nfunction addRow(panelUserColumnDisplayNames, rows) {\n  var dynamicFields = panelUserColumnDisplayNames.reduce(function (acc, columnName) {\n    if (columnName !== '') {\n      acc[columnName] = '';\n    }\n    return acc;\n  }, {});\n  var staticFields = {\n    item: '',\n    quantity: null,\n    rate: null,\n    tax: null,\n    calculateTax: true,\n    total: null\n  };\n  var newRow = _objectSpread(_objectSpread({}, dynamicFields), staticFields);\n  rows.push(newRow);\n  return newRow;\n}\nfunction deleteRow(index, rows) {\n  rows.splice(index, 1);\n}\nfunction calculateTotal(row, calculateTax) {\n  var quantity = parseFloat(row.quantity) || 0;\n  var rate = parseFloat(row.rate) || 0;\n  var tax = parseFloat(row.tax) || 0;\n\n  // Calculate total without tax\n  var total = quantity * rate;\n\n  // Apply tax if enabled\n  if (calculateTax) {\n    total += total * tax / 100;\n  }\n\n  // Set total for the row\n  row.total = total.toFixed(2);\n  return row.total;\n}\nfunction totalQuantity(rows) {\n  return rows.reduce(function (sum, row) {\n    return sum + (parseFloat(row.quantity) || 0);\n  }, 0);\n}\nfunction totalAmountBeforeDiscount(rows) {\n  return rows.reduce(function (sum, row) {\n    return sum + (parseFloat(row.total) || 0);\n  }, 0);\n}\nfunction updateTotals(context) {\n  // Recalculate the total quantity\n  context.totalQty = totalQuantity(context.rows);\n\n  // Calculate total amount before any discount or round-off\n  var totalAmount = totalAmountBeforeDiscount(context.rows);\n\n  // Apply global discount\n  var discount = parseFloat(context.discount) || 0;\n  var discountAmount = totalAmount * discount / 100;\n  totalAmount -= discountAmount;\n\n  // Apply round-off if enabled\n  context.roundOffAmount = 0;\n  if (context.roundOff) {\n    context.roundOffAmount = Math.round(totalAmount) - totalAmount;\n    totalAmount = Math.round(totalAmount);\n  }\n  context.totalAmount = totalAmount.toFixed(2);\n\n  // Update tax breakdown\n  generateTaxBreakdown(context);\n\n  // Convert to words\n  context.totalAmountInWords = numberToIndianRupees(totalAmount);\n}\nfunction generateTaxBreakdown(context) {\n  var breakdown = '';\n  var discount = parseFloat(context.discount) || 0;\n  var showBreakdown = false;\n\n  // Ensure selectedUserState uses authUserState if undefined or empty\n  var selectedState = typeof context.selectedUserState !== 'undefined' && context.selectedUserState.trim() !== '' ? context.selectedUserState.trim().toLowerCase() : context.authUserState.trim().toLowerCase();\n  var authState = context.authUserState.trim().toLowerCase();\n\n  // Determine if IGST should be applied\n  var applyIGST = selectedState !== authState;\n\n  // Aggregate data by tax rate\n  var taxData = {};\n  context.rows.forEach(function (row) {\n    var taxRate = parseFloat(row.tax) || 0;\n    if (taxRate === 0) return; // Skip rows with zero tax rate\n\n    var totalWithoutTax = parseFloat(row.total) / (1 + taxRate / 100);\n    var discountedTotal = totalWithoutTax - totalWithoutTax * discount / 100;\n    var taxAmount = discountedTotal * (taxRate / 100);\n    if (!taxData[taxRate]) {\n      taxData[taxRate] = {\n        totalWithoutTax: 0,\n        discountedTotal: 0,\n        taxAmount: 0\n      };\n    }\n    taxData[taxRate].totalWithoutTax += totalWithoutTax;\n    taxData[taxRate].discountedTotal += discountedTotal;\n    taxData[taxRate].taxAmount += taxAmount;\n  });\n\n  // Generate breakdown HTML\n  for (var _i = 0, _Object$entries = Object.entries(taxData); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      taxRate = _Object$entries$_i[0],\n      data = _Object$entries$_i[1];\n    if (discount > 0 || data.totalWithoutTax > 0) {\n      showBreakdown = true;\n      breakdown += \"\\n                <tr class=\\\"text-xs text-black\\\">\\n                    <td class=\\\"text-right\\\">Amount at \".concat(taxRate, \"%:</td>\\n                    <td class=\\\"text-right\\\">\").concat(data.totalWithoutTax.toFixed(2), \"</td>\\n                </tr>\\n                \").concat(discount > 0 ? \"\\n                <tr class=\\\"text-xs text-black\\\">\\n                    <td class=\\\"text-right\\\">Discount at \".concat(discount, \"%:</td>\\n                    <td class=\\\"text-right\\\">\").concat((data.totalWithoutTax * discount / 100).toFixed(2), \"</td>\\n                </tr>\\n                <tr class=\\\"text-xs text-black\\\">\\n                    <td class=\\\"text-right font-bold\\\">Amount at \").concat(discount, \"%:</td>\\n                    <td class=\\\"text-right font-bold\\\">\").concat(data.discountedTotal.toFixed(2), \"</td>\\n                </tr>\\n                \") : '', \"\\n                \").concat(data.totalWithoutTax > 0 ? applyIGST ? \"\\n                    <tr class=\\\"text-xs text-black\\\">\\n                        <td class=\\\"text-right\\\">IGST \".concat(taxRate, \"%:</td>\\n                        <td class=\\\"text-right\\\">\").concat(data.taxAmount.toFixed(2), \"</td>\\n                    </tr>\\n                    \") : \"\\n                    <tr class=\\\"text-xs text-black\\\">\\n                        <td class=\\\"text-right\\\">SGST \".concat((taxRate / 2).toFixed(2), \"%:</td>\\n                        <td class=\\\"text-right\\\">\").concat((data.taxAmount / 2).toFixed(2), \"</td>\\n                    </tr>\\n                    <tr class=\\\"text-xs text-black\\\">\\n                        <td class=\\\"text-right\\\">CGST \").concat((taxRate / 2).toFixed(2), \"%:</td>\\n                        <td class=\\\"text-right\\\">\").concat((data.taxAmount / 2).toFixed(2), \"</td>\\n                    </tr>\\n                    \") : '', \"\\n                <tr class=\\\"text-xs text-black\\\">\\n                    <td colspan=\\\"2\\\" style=\\\"height: 10px;\\\"></td>\\n                </tr>\\n            \");\n    }\n  }\n\n  // Handle case where only discount is applied\n  if (discount > 0 && Object.keys(taxData).length === 0) {\n    showBreakdown = true;\n    var _totalAmountBeforeDiscount = _totalAmountBeforeDiscount(context.rows);\n    breakdown += \"\\n            <tr class=\\\"text-xs text-black\\\">\\n                <td class=\\\"text-right\\\">Total Amount:</td>\\n                <td class=\\\"text-right\\\">\".concat(_totalAmountBeforeDiscount.toFixed(2), \"</td>\\n            </tr>\\n            <tr class=\\\"text-xs text-black\\\">\\n                <td class=\\\"text-right\\\">Discount at \").concat(discount, \"%:</td>\\n                <td class=\\\"text-right\\\">\").concat((_totalAmountBeforeDiscount * discount / 100).toFixed(2), \"</td>\\n            </tr>\\n            <tr class=\\\"text-xs text-black\\\">\\n                <td class=\\\"text-right font-bold\\\">Amount at \").concat(discount, \"%:</td>\\n                <td class=\\\"text-right font-bold\\\">\").concat((_totalAmountBeforeDiscount - _totalAmountBeforeDiscount * discount / 100).toFixed(2), \"</td>\\n            </tr>\\n        \");\n  }\n  if (showBreakdown) {\n    context.taxBreakdown = \"\\n            <table class=\\\"w-full\\\">\\n                \".concat(breakdown, \"\\n            </table>\\n        \");\n  } else {\n    context.taxBreakdown = '';\n  }\n}\nfunction convertNumberToWords(number) {\n  var words = {\n    0: 'Zero',\n    1: 'One',\n    2: 'Two',\n    3: 'Three',\n    4: 'Four',\n    5: 'Five',\n    6: 'Six',\n    7: 'Seven',\n    8: 'Eight',\n    9: 'Nine',\n    10: 'Ten',\n    11: 'Eleven',\n    12: 'Twelve',\n    13: 'Thirteen',\n    14: 'Fourteen',\n    15: 'Fifteen',\n    16: 'Sixteen',\n    17: 'Seventeen',\n    18: 'Eighteen',\n    19: 'Nineteen',\n    20: 'Twenty',\n    30: 'Thirty',\n    40: 'Forty',\n    50: 'Fifty',\n    60: 'Sixty',\n    70: 'Seventy',\n    80: 'Eighty',\n    90: 'Ninety'\n  };\n  if (number < 21) {\n    return words[number];\n  } else if (number < 100) {\n    var tens = words[10 * Math.floor(number / 10)];\n    var units = number % 10;\n    return tens + (units ? ' ' + words[units] : '');\n  } else if (number < 1000) {\n    var hundreds = words[Math.floor(number / 100)] + ' Hundred';\n    var remainder = number % 100;\n    return hundreds + (remainder ? ' and ' + convertNumberToWords(remainder) : '');\n  } else if (number < 100000) {\n    var thousands = convertNumberToWords(Math.floor(number / 1000)) + ' Thousand';\n    var _remainder = number % 1000;\n    return thousands + (_remainder ? ' ' + convertNumberToWords(_remainder) : '');\n  } else if (number < 10000000) {\n    var lakhs = convertNumberToWords(Math.floor(number / 100000)) + ' Lakh';\n    var _remainder2 = number % 100000;\n    return lakhs + (_remainder2 ? ' ' + convertNumberToWords(_remainder2) : '');\n  } else {\n    var crores = convertNumberToWords(Math.floor(number / 10000000)) + ' Crore';\n    var _remainder3 = number % 10000000;\n    return crores + (_remainder3 ? ' ' + convertNumberToWords(_remainder3) : '');\n  }\n}\nfunction numberToIndianRupees(number) {\n  var amountInWords = convertNumberToWords(Math.floor(number));\n  var decimalPart = Math.round((number - Math.floor(number)) * 100);\n  if (decimalPart > 0) {\n    var decimalInWords = convertNumberToWords(decimalPart);\n    return amountInWords + ' Rupees and ' + decimalInWords + ' Paisa';\n  } else {\n    return amountInWords + ' Rupees';\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/components/rowManagement.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/components/rowManagement.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;